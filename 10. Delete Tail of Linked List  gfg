10. Delete Tail of Linked List 

...................
Given a linked list of size n, you have to delete the tail (last element) in the linked list.

Example 1:

Input:
LinkedList: 1->2
Output: 1
Example 2:

Input:
LinkedList: 2->5->7->8->99->100
Output: 2 5 7 8 99
Your Task:
The task is to complete the function deleteTail() which takes head reference and returns reference to the head node, which is then used to display the list. The printing is done automatically by the driver code.

Expected Time Complexity: O(N).
Expected Auxiliary Space: O(1).

Constraints:
2 <= number of nodes <= 103

.................

Node * deleteTail(Node *head)
{
    //Your Code here
    if(head==NULL)
    {
        return NULL;
        
    }
    if(head->next ==NULL)
    {
        delete head;
        return NULL;
    }
    else{
        Node *curr = head;
        while(curr->next->next !=NULL)
        {
            curr = curr ->next;
        }
       delete curr->next;
       curr ->next = NULL;
       return head;
        
    }
}

.............................

